Grammar

    0 $accept: program $end

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    2 list: cmd list
    3     | cmd

    4 cmd: if_expr
    5    | while_expr
    6    | var_dec SEMICOLON
    7    | printf SEMICOLON
    8    | scanf SEMICOLON

    9 printf: PRINT OPENPARENTHESIS TYPES COMMA list_var CLOSEPARENTHESIS

   10 scanf: SCAN OPENPARENTHESIS TYPES COMMA list_scan_var CLOSEPARENTHESIS

   11 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd
   12        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE cmd
   13        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   14        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE cmd
   15        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

   17 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd
   18           | WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

   19 atr: VAR EQUAL expr

   20 decl: VAR

   21 list_scan_var: '&' decl COMMA list_scan_var
   22              | '&' decl

   23 var_dec: INTD list_var
   24        | FLOATD list_var

   25 list_var: decl
   26         | decl COMMA list_var
   27         | atr COMMA list_var
   28         | atr

   29 expr: INT
   30     | FLOAT
   31     | OPENPARENTHESIS expr CLOSEPARENTHESIS
   32     | expr PLUS expr
   33     | expr SUB expr
   34     | expr MUL expr
   35     | expr DIV expr
   36     | expr MOD expr

   37 bexpr: bexpr OR bexpr
   38      | bexpr AND bexpr
   39      | NOT bexpr
   40      | expr
   41      | expr EQU expr
   42      | expr DIF expr
   43      | expr LES expr
   44      | expr LOQ expr
   45      | expr GRE expr
   46      | expr GOQ expr


Terminals, with rules where they appear

$end (0) 0
'&' (38) 21 22
error (256)
MAIN (258) 1
INT <intValue> (259) 29
FLOAT <floatValue> (260) 30
PLUS (261) 32
SUB (262) 33
MUL (263) 34
DIV (264) 35
OR (265) 37
AND (266) 38
NOT (267) 39
EQU (268) 41
DIF (269) 42
LES (270) 43
LOQ (271) 44
GRE (272) 45
GOQ (273) 46
IF (274) 11 12 13 14 15 16
ELSE (275) 12 14 15 16
WHILE (276) 17 18
INTD (277) 1 23
FLOATD (278) 24
SCAN (279) 10
PRINT (280) 9
VAR <stringValue> (281) 19 20
SEMICOLON (282) 6 7 8
EQUAL (283) 19
OPENPARENTHESIS (284) 1 9 10 11 12 13 14 15 16 17 18 31
CLOSEPARENTHESIS (285) 1 9 10 11 12 13 14 15 16 17 18 31
OPENCURLYBRACKETS (286) 1 13 14 15 16 18
CLOSECURLYBRACKETS (287) 1 13 14 15 16 18
COMMA (288) 9 10 21 26 27
TYPES <typesValue> (289) 9 10
MOD (290) 36
NO_ELSE (291)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
list <commandList> (40)
    on left: 2 3, on right: 1 2 13 14 15 16 18
cmd <cmdType> (41)
    on left: 4 5 6 7 8, on right: 2 3 11 12 14 16 17
printf <printf_exp> (42)
    on left: 9, on right: 7
scanf <scan_expr> (43)
    on left: 10, on right: 8
if_expr <ifExpression> (44)
    on left: 11 12 13 14 15 16, on right: 4
while_expr <whileExpression> (45)
    on left: 17 18, on right: 5
atr <assignment> (46)
    on left: 19, on right: 27 28
decl <declaration> (47)
    on left: 20, on right: 21 22 25 26
list_scan_var <scan_list> (48)
    on left: 21 22, on right: 10 21
var_dec <varList> (49)
    on left: 23 24, on right: 6
list_var <list_decl> (50)
    on left: 25 26 27 28, on right: 9 23 24 26 27
expr <exprValue> (51)
    on left: 29 30 31 32 33 34 35 36, on right: 19 31 32 33 34 35 36
    40 41 42 43 44 45 46
bexpr <boolExpr> (52)
    on left: 37 38 39 40 41 42 43 44 45 46, on right: 11 12 13 14 15
    16 17 18 37 38 39


State 0

    0 $accept: . program $end

    INTD  shift, and go to state 1

    program  go to state 2


State 1

    1 program: INTD . MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    MAIN  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: INTD MAIN . OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    OPENPARENTHESIS  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: INTD MAIN OPENPARENTHESIS . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    CLOSEPARENTHESIS  shift, and go to state 6


State 6

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    OPENCURLYBRACKETS  shift, and go to state 7


State 7

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13

    list        go to state 14
    cmd         go to state 15
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 8

   11 if_expr: IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd
   12        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE cmd
   13        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   14        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE cmd
   15        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    OPENPARENTHESIS  shift, and go to state 21


State 9

   17 while_expr: WHILE . OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd
   18           | WHILE . OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    OPENPARENTHESIS  shift, and go to state 22


State 10

   23 var_dec: INTD . list_var

    VAR  shift, and go to state 23

    atr       go to state 24
    decl      go to state 25
    list_var  go to state 26


State 11

   24 var_dec: FLOATD . list_var

    VAR  shift, and go to state 23

    atr       go to state 24
    decl      go to state 25
    list_var  go to state 27


State 12

   10 scanf: SCAN . OPENPARENTHESIS TYPES COMMA list_scan_var CLOSEPARENTHESIS

    OPENPARENTHESIS  shift, and go to state 28


State 13

    9 printf: PRINT . OPENPARENTHESIS TYPES COMMA list_var CLOSEPARENTHESIS

    OPENPARENTHESIS  shift, and go to state 29


State 14

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 30


State 15

    2 list: cmd . list
    3     | cmd .

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13

    $default  reduce using rule 3 (list)

    list        go to state 31
    cmd         go to state 15
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 16

    7 cmd: printf . SEMICOLON

    SEMICOLON  shift, and go to state 32


State 17

    8 cmd: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 33


State 18

    4 cmd: if_expr .

    $default  reduce using rule 4 (cmd)


State 19

    5 cmd: while_expr .

    $default  reduce using rule 5 (cmd)


State 20

    6 cmd: var_dec . SEMICOLON

    SEMICOLON  shift, and go to state 34


State 21

   11 if_expr: IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS cmd
   12        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS cmd ELSE cmd
   13        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   14        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE cmd
   15        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    NOT              shift, and go to state 37
    OPENPARENTHESIS  shift, and go to state 38

    expr   go to state 39
    bexpr  go to state 40


State 22

   17 while_expr: WHILE OPENPARENTHESIS . bexpr CLOSEPARENTHESIS cmd
   18           | WHILE OPENPARENTHESIS . bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    NOT              shift, and go to state 37
    OPENPARENTHESIS  shift, and go to state 38

    expr   go to state 39
    bexpr  go to state 41


State 23

   19 atr: VAR . EQUAL expr
   20 decl: VAR .

    EQUAL  shift, and go to state 42

    $default  reduce using rule 20 (decl)


State 24

   27 list_var: atr . COMMA list_var
   28         | atr .

    COMMA  shift, and go to state 43

    $default  reduce using rule 28 (list_var)


State 25

   25 list_var: decl .
   26         | decl . COMMA list_var

    COMMA  shift, and go to state 44

    $default  reduce using rule 25 (list_var)


State 26

   23 var_dec: INTD list_var .

    $default  reduce using rule 23 (var_dec)


State 27

   24 var_dec: FLOATD list_var .

    $default  reduce using rule 24 (var_dec)


State 28

   10 scanf: SCAN OPENPARENTHESIS . TYPES COMMA list_scan_var CLOSEPARENTHESIS

    TYPES  shift, and go to state 45


State 29

    9 printf: PRINT OPENPARENTHESIS . TYPES COMMA list_var CLOSEPARENTHESIS

    TYPES  shift, and go to state 46


State 30

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS .

    $default  reduce using rule 1 (program)


State 31

    2 list: cmd list .

    $default  reduce using rule 2 (list)


State 32

    7 cmd: printf SEMICOLON .

    $default  reduce using rule 7 (cmd)


State 33

    8 cmd: scanf SEMICOLON .

    $default  reduce using rule 8 (cmd)


State 34

    6 cmd: var_dec SEMICOLON .

    $default  reduce using rule 6 (cmd)


State 35

   29 expr: INT .

    $default  reduce using rule 29 (expr)


State 36

   30 expr: FLOAT .

    $default  reduce using rule 30 (expr)


State 37

   39 bexpr: NOT . bexpr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    NOT              shift, and go to state 37
    OPENPARENTHESIS  shift, and go to state 38

    expr   go to state 39
    bexpr  go to state 47


State 38

   31 expr: OPENPARENTHESIS . expr CLOSEPARENTHESIS

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    OPENPARENTHESIS  shift, and go to state 38

    expr  go to state 48


State 39

   32 expr: expr . PLUS expr
   33     | expr . SUB expr
   34     | expr . MUL expr
   35     | expr . DIV expr
   36     | expr . MOD expr
   40 bexpr: expr .
   41      | expr . EQU expr
   42      | expr . DIF expr
   43      | expr . LES expr
   44      | expr . LOQ expr
   45      | expr . GRE expr
   46      | expr . GOQ expr

    PLUS  shift, and go to state 49
    SUB   shift, and go to state 50
    MUL   shift, and go to state 51
    DIV   shift, and go to state 52
    EQU   shift, and go to state 53
    DIF   shift, and go to state 54
    LES   shift, and go to state 55
    LOQ   shift, and go to state 56
    GRE   shift, and go to state 57
    GOQ   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 40 (bexpr)


State 40

   11 if_expr: IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS cmd
   12        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS cmd ELSE cmd
   13        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   14        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE cmd
   15        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   37 bexpr: bexpr . OR bexpr
   38      | bexpr . AND bexpr

    OR                shift, and go to state 60
    AND               shift, and go to state 61
    CLOSEPARENTHESIS  shift, and go to state 62


State 41

   17 while_expr: WHILE OPENPARENTHESIS bexpr . CLOSEPARENTHESIS cmd
   18           | WHILE OPENPARENTHESIS bexpr . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   37 bexpr: bexpr . OR bexpr
   38      | bexpr . AND bexpr

    OR                shift, and go to state 60
    AND               shift, and go to state 61
    CLOSEPARENTHESIS  shift, and go to state 63


State 42

   19 atr: VAR EQUAL . expr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    OPENPARENTHESIS  shift, and go to state 38

    expr  go to state 64


State 43

   27 list_var: atr COMMA . list_var

    VAR  shift, and go to state 23

    atr       go to state 24
    decl      go to state 25
    list_var  go to state 65


State 44

   26 list_var: decl COMMA . list_var

    VAR  shift, and go to state 23

    atr       go to state 24
    decl      go to state 25
    list_var  go to state 66


State 45

   10 scanf: SCAN OPENPARENTHESIS TYPES . COMMA list_scan_var CLOSEPARENTHESIS

    COMMA  shift, and go to state 67


State 46

    9 printf: PRINT OPENPARENTHESIS TYPES . COMMA list_var CLOSEPARENTHESIS

    COMMA  shift, and go to state 68


State 47

   37 bexpr: bexpr . OR bexpr
   38      | bexpr . AND bexpr
   39      | NOT bexpr .

    $default  reduce using rule 39 (bexpr)


State 48

   31 expr: OPENPARENTHESIS expr . CLOSEPARENTHESIS
   32     | expr . PLUS expr
   33     | expr . SUB expr
   34     | expr . MUL expr
   35     | expr . DIV expr
   36     | expr . MOD expr

    PLUS              shift, and go to state 49
    SUB               shift, and go to state 50
    MUL               shift, and go to state 51
    DIV               shift, and go to state 52
    CLOSEPARENTHESIS  shift, and go to state 69
    MOD               shift, and go to state 59


State 49

   32 expr: expr PLUS . expr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    OPENPARENTHESIS  shift, and go to state 38

    expr  go to state 70


State 50

   33 expr: expr SUB . expr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    OPENPARENTHESIS  shift, and go to state 38

    expr  go to state 71


State 51

   34 expr: expr MUL . expr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    OPENPARENTHESIS  shift, and go to state 38

    expr  go to state 72


State 52

   35 expr: expr DIV . expr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    OPENPARENTHESIS  shift, and go to state 38

    expr  go to state 73


State 53

   41 bexpr: expr EQU . expr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    OPENPARENTHESIS  shift, and go to state 38

    expr  go to state 74


State 54

   42 bexpr: expr DIF . expr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    OPENPARENTHESIS  shift, and go to state 38

    expr  go to state 75


State 55

   43 bexpr: expr LES . expr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    OPENPARENTHESIS  shift, and go to state 38

    expr  go to state 76


State 56

   44 bexpr: expr LOQ . expr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    OPENPARENTHESIS  shift, and go to state 38

    expr  go to state 77


State 57

   45 bexpr: expr GRE . expr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    OPENPARENTHESIS  shift, and go to state 38

    expr  go to state 78


State 58

   46 bexpr: expr GOQ . expr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    OPENPARENTHESIS  shift, and go to state 38

    expr  go to state 79


State 59

   36 expr: expr MOD . expr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    OPENPARENTHESIS  shift, and go to state 38

    expr  go to state 80


State 60

   37 bexpr: bexpr OR . bexpr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    NOT              shift, and go to state 37
    OPENPARENTHESIS  shift, and go to state 38

    expr   go to state 39
    bexpr  go to state 81


State 61

   38 bexpr: bexpr AND . bexpr

    INT              shift, and go to state 35
    FLOAT            shift, and go to state 36
    NOT              shift, and go to state 37
    OPENPARENTHESIS  shift, and go to state 38

    expr   go to state 39
    bexpr  go to state 82


State 62

   11 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . cmd
   12        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . cmd ELSE cmd
   13        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   14        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE cmd
   15        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . cmd ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF                 shift, and go to state 8
    WHILE              shift, and go to state 9
    INTD               shift, and go to state 10
    FLOATD             shift, and go to state 11
    SCAN               shift, and go to state 12
    PRINT              shift, and go to state 13
    OPENCURLYBRACKETS  shift, and go to state 83

    cmd         go to state 84
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 63

   17 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS . cmd
   18           | WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF                 shift, and go to state 8
    WHILE              shift, and go to state 9
    INTD               shift, and go to state 10
    FLOATD             shift, and go to state 11
    SCAN               shift, and go to state 12
    PRINT              shift, and go to state 13
    OPENCURLYBRACKETS  shift, and go to state 85

    cmd         go to state 86
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 64

   19 atr: VAR EQUAL expr .
   32 expr: expr . PLUS expr
   33     | expr . SUB expr
   34     | expr . MUL expr
   35     | expr . DIV expr
   36     | expr . MOD expr

    PLUS  shift, and go to state 49
    SUB   shift, and go to state 50
    MUL   shift, and go to state 51
    DIV   shift, and go to state 52
    MOD   shift, and go to state 59

    $default  reduce using rule 19 (atr)


State 65

   27 list_var: atr COMMA list_var .

    $default  reduce using rule 27 (list_var)


State 66

   26 list_var: decl COMMA list_var .

    $default  reduce using rule 26 (list_var)


State 67

   10 scanf: SCAN OPENPARENTHESIS TYPES COMMA . list_scan_var CLOSEPARENTHESIS

    '&'  shift, and go to state 87

    list_scan_var  go to state 88


State 68

    9 printf: PRINT OPENPARENTHESIS TYPES COMMA . list_var CLOSEPARENTHESIS

    VAR  shift, and go to state 23

    atr       go to state 24
    decl      go to state 25
    list_var  go to state 89


State 69

   31 expr: OPENPARENTHESIS expr CLOSEPARENTHESIS .

    $default  reduce using rule 31 (expr)


State 70

   32 expr: expr . PLUS expr
   32     | expr PLUS expr .
   33     | expr . SUB expr
   34     | expr . MUL expr
   35     | expr . DIV expr
   36     | expr . MOD expr

    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    MOD  shift, and go to state 59

    $default  reduce using rule 32 (expr)


State 71

   32 expr: expr . PLUS expr
   33     | expr . SUB expr
   33     | expr SUB expr .
   34     | expr . MUL expr
   35     | expr . DIV expr
   36     | expr . MOD expr

    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    MOD  shift, and go to state 59

    $default  reduce using rule 33 (expr)


State 72

   32 expr: expr . PLUS expr
   33     | expr . SUB expr
   34     | expr . MUL expr
   34     | expr MUL expr .
   35     | expr . DIV expr
   36     | expr . MOD expr

    $default  reduce using rule 34 (expr)


State 73

   32 expr: expr . PLUS expr
   33     | expr . SUB expr
   34     | expr . MUL expr
   35     | expr . DIV expr
   35     | expr DIV expr .
   36     | expr . MOD expr

    $default  reduce using rule 35 (expr)


State 74

   32 expr: expr . PLUS expr
   33     | expr . SUB expr
   34     | expr . MUL expr
   35     | expr . DIV expr
   36     | expr . MOD expr
   41 bexpr: expr EQU expr .

    PLUS  shift, and go to state 49
    SUB   shift, and go to state 50
    MUL   shift, and go to state 51
    DIV   shift, and go to state 52
    MOD   shift, and go to state 59

    $default  reduce using rule 41 (bexpr)


State 75

   32 expr: expr . PLUS expr
   33     | expr . SUB expr
   34     | expr . MUL expr
   35     | expr . DIV expr
   36     | expr . MOD expr
   42 bexpr: expr DIF expr .

    PLUS  shift, and go to state 49
    SUB   shift, and go to state 50
    MUL   shift, and go to state 51
    DIV   shift, and go to state 52
    MOD   shift, and go to state 59

    $default  reduce using rule 42 (bexpr)


State 76

   32 expr: expr . PLUS expr
   33     | expr . SUB expr
   34     | expr . MUL expr
   35     | expr . DIV expr
   36     | expr . MOD expr
   43 bexpr: expr LES expr .

    PLUS  shift, and go to state 49
    SUB   shift, and go to state 50
    MUL   shift, and go to state 51
    DIV   shift, and go to state 52
    MOD   shift, and go to state 59

    $default  reduce using rule 43 (bexpr)


State 77

   32 expr: expr . PLUS expr
   33     | expr . SUB expr
   34     | expr . MUL expr
   35     | expr . DIV expr
   36     | expr . MOD expr
   44 bexpr: expr LOQ expr .

    PLUS  shift, and go to state 49
    SUB   shift, and go to state 50
    MUL   shift, and go to state 51
    DIV   shift, and go to state 52
    MOD   shift, and go to state 59

    $default  reduce using rule 44 (bexpr)


State 78

   32 expr: expr . PLUS expr
   33     | expr . SUB expr
   34     | expr . MUL expr
   35     | expr . DIV expr
   36     | expr . MOD expr
   45 bexpr: expr GRE expr .

    PLUS  shift, and go to state 49
    SUB   shift, and go to state 50
    MUL   shift, and go to state 51
    DIV   shift, and go to state 52
    MOD   shift, and go to state 59

    $default  reduce using rule 45 (bexpr)


State 79

   32 expr: expr . PLUS expr
   33     | expr . SUB expr
   34     | expr . MUL expr
   35     | expr . DIV expr
   36     | expr . MOD expr
   46 bexpr: expr GOQ expr .

    PLUS  shift, and go to state 49
    SUB   shift, and go to state 50
    MUL   shift, and go to state 51
    DIV   shift, and go to state 52
    MOD   shift, and go to state 59

    $default  reduce using rule 46 (bexpr)


State 80

   32 expr: expr . PLUS expr
   33     | expr . SUB expr
   34     | expr . MUL expr
   35     | expr . DIV expr
   36     | expr . MOD expr
   36     | expr MOD expr .

    $default  reduce using rule 36 (expr)


State 81

   37 bexpr: bexpr . OR bexpr
   37      | bexpr OR bexpr .
   38      | bexpr . AND bexpr

    $default  reduce using rule 37 (bexpr)


State 82

   37 bexpr: bexpr . OR bexpr
   38      | bexpr . AND bexpr
   38      | bexpr AND bexpr .

    $default  reduce using rule 38 (bexpr)


State 83

   13 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS
   14        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS ELSE cmd
   15        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13

    list        go to state 90
    cmd         go to state 15
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 84

   11 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd .
   12        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd . ELSE cmd
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd . ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    ELSE  shift, and go to state 91

    $default  reduce using rule 11 (if_expr)


State 85

   18 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13

    list        go to state 92
    cmd         go to state 15
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 86

   17 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd .

    $default  reduce using rule 17 (while_expr)


State 87

   21 list_scan_var: '&' . decl COMMA list_scan_var
   22              | '&' . decl

    VAR  shift, and go to state 93

    decl  go to state 94


State 88

   10 scanf: SCAN OPENPARENTHESIS TYPES COMMA list_scan_var . CLOSEPARENTHESIS

    CLOSEPARENTHESIS  shift, and go to state 95


State 89

    9 printf: PRINT OPENPARENTHESIS TYPES COMMA list_var . CLOSEPARENTHESIS

    CLOSEPARENTHESIS  shift, and go to state 96


State 90

   13 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS
   14        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS ELSE cmd
   15        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 97


State 91

   12 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE . cmd
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE . OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF                 shift, and go to state 8
    WHILE              shift, and go to state 9
    INTD               shift, and go to state 10
    FLOATD             shift, and go to state 11
    SCAN               shift, and go to state 12
    PRINT              shift, and go to state 13
    OPENCURLYBRACKETS  shift, and go to state 98

    cmd         go to state 99
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 92

   18 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 100


State 93

   20 decl: VAR .

    $default  reduce using rule 20 (decl)


State 94

   21 list_scan_var: '&' decl . COMMA list_scan_var
   22              | '&' decl .

    COMMA  shift, and go to state 101

    $default  reduce using rule 22 (list_scan_var)


State 95

   10 scanf: SCAN OPENPARENTHESIS TYPES COMMA list_scan_var CLOSEPARENTHESIS .

    $default  reduce using rule 10 (scanf)


State 96

    9 printf: PRINT OPENPARENTHESIS TYPES COMMA list_var CLOSEPARENTHESIS .

    $default  reduce using rule 9 (printf)


State 97

   13 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS .
   14        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS . ELSE cmd
   15        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS . ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    ELSE  shift, and go to state 102

    $default  reduce using rule 13 (if_expr)


State 98

   16 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS . list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13

    list        go to state 103
    cmd         go to state 15
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 99

   12 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE cmd .

    $default  reduce using rule 12 (if_expr)


State 100

   18 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS .

    $default  reduce using rule 18 (while_expr)


State 101

   21 list_scan_var: '&' decl COMMA . list_scan_var

    '&'  shift, and go to state 87

    list_scan_var  go to state 104


State 102

   14 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE . cmd
   15        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE . OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF                 shift, and go to state 8
    WHILE              shift, and go to state 9
    INTD               shift, and go to state 10
    FLOATD             shift, and go to state 11
    SCAN               shift, and go to state 12
    PRINT              shift, and go to state 13
    OPENCURLYBRACKETS  shift, and go to state 105

    cmd         go to state 106
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 103

   16 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS list . CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 107


State 104

   21 list_scan_var: '&' decl COMMA list_scan_var .

    $default  reduce using rule 21 (list_scan_var)


State 105

   15 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS . list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13

    list        go to state 108
    cmd         go to state 15
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 106

   14 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE cmd .

    $default  reduce using rule 14 (if_expr)


State 107

   16 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS .

    $default  reduce using rule 16 (if_expr)


State 108

   15 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list . CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 109


State 109

   15 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS .

    $default  reduce using rule 15 (if_expr)
