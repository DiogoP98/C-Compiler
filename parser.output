State 16 conflicts: 7 shift/reduce
State 54 conflicts: 2 shift/reduce
State 89 conflicts: 1 shift/reduce
State 104 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    2 list: cmd list
    3     | cmd

    4 cmd: if_expr
    5    | while_expr
    6    | INTD list_var SEMICOLON
    7    | FLOATD list_var SEMICOLON
    8    | printf SEMICOLON
    9    | scanf SEMICOLON
   10    | list_var SEMICOLON

   11 printf: PRINT OPENPARENTHESIS TYPES COMMA list_var CLOSEPARENTHESIS

   12 scanf: SCAN OPENPARENTHESIS TYPES COMMA list_scan_var CLOSEPARENTHESIS

   13 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS list
   14        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS list ELSE list
   15        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE list
   17        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   18        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS list ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

   19 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS list
   20           | WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

   21 atr: VAR EQUAL expr
   22    | VAR OPENSQUAREBRACKETS INT CLOSESQUAREBRACKETS EQUAL expr

   23 decl: VAR
   24     | VAR OPENSQUAREBRACKETS INT CLOSESQUAREBRACKETS

   25 list_scan_var: '&' decl COMMA list_scan_var
   26              | '&' decl

   27 list_var: decl
   28         | decl COMMA list_var
   29         | atr
   30         | atr COMMA list_var

   31 expr: INT
   32     | FLOAT
   33     | expr PLUS expr
   34     | expr SUB expr
   35     | expr MUL expr
   36     | expr DIV expr
   37     | expr MOD expr

   38 bexpr: bexpr OR bexpr
   39      | bexpr AND bexpr
   40      | NOT bexpr
   41      | expr
   42      | OPENPARENTHESIS expr CLOSEPARENTHESIS
   43      | expr EQU expr
   44      | expr DIF expr
   45      | expr LES expr
   46      | expr LOQ expr
   47      | expr GRE expr
   48      | expr GOQ expr


Terminals, with rules where they appear

$end (0) 0
'&' (38) 25 26
error (256)
MAIN (258) 1
INT <intValue> (259) 22 24 31
FLOAT <floatValue> (260) 32
PLUS (261) 33
SUB (262) 34
MUL (263) 35
DIV (264) 36
OR (265) 38
AND (266) 39
NOT (267) 40
EQU (268) 43
DIF (269) 44
LES (270) 45
LOQ (271) 46
GRE (272) 47
GOQ (273) 48
IF (274) 13 14 15 16 17 18
ELSE (275) 14 16 17 18
WHILE (276) 19 20
INTD (277) 1 6
FLOATD (278) 7
SCAN (279) 12
PRINT (280) 11
VAR <stringValue> (281) 21 22 23 24
SEMICOLON (282) 6 7 8 9 10
EQUAL (283) 21 22
OPENPARENTHESIS (284) 1 11 12 13 14 15 16 17 18 19 20 42
CLOSEPARENTHESIS (285) 1 11 12 13 14 15 16 17 18 19 20 42
OPENCURLYBRACKETS (286) 1 15 16 17 18 20
CLOSECURLYBRACKETS (287) 1 15 16 17 18 20
OPENSQUAREBRACKETS (288) 22 24
CLOSESQUAREBRACKETS (289) 22 24
COMMA (290) 11 12 25 28 30
TYPES <typesValue> (291) 11 12
MOD (292) 37


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
list <commandList> (41)
    on left: 2 3, on right: 1 2 13 14 15 16 17 18 19 20
cmd <cmdType> (42)
    on left: 4 5 6 7 8 9 10, on right: 2 3
printf <printf_exp> (43)
    on left: 11, on right: 8
scanf <scan_expr> (44)
    on left: 12, on right: 9
if_expr <ifExpression> (45)
    on left: 13 14 15 16 17 18, on right: 4
while_expr <whileExpression> (46)
    on left: 19 20, on right: 5
atr <assignment> (47)
    on left: 21 22, on right: 29 30
decl <declaration> (48)
    on left: 23 24, on right: 25 26 27 28
list_scan_var <scan_list> (49)
    on left: 25 26, on right: 12 25
list_var <list_decl> (50)
    on left: 27 28 29 30, on right: 6 7 10 11 28 30
expr <exprValue> (51)
    on left: 31 32 33 34 35 36 37, on right: 21 22 33 34 35 36 37 41
    42 43 44 45 46 47 48
bexpr <boolExpr> (52)
    on left: 38 39 40 41 42 43 44 45 46 47 48, on right: 13 14 15 16
    17 18 19 20 38 39 40


State 0

    0 $accept: . program $end

    INTD  shift, and go to state 1

    program  go to state 2


State 1

    1 program: INTD . MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    MAIN  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: INTD MAIN . OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    OPENPARENTHESIS  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: INTD MAIN OPENPARENTHESIS . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    CLOSEPARENTHESIS  shift, and go to state 6


State 6

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    OPENCURLYBRACKETS  shift, and go to state 7


State 7

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13
    VAR     shift, and go to state 14

    list        go to state 15
    cmd         go to state 16
    printf      go to state 17
    scanf       go to state 18
    if_expr     go to state 19
    while_expr  go to state 20
    atr         go to state 21
    decl        go to state 22
    list_var    go to state 23


State 8

   13 if_expr: IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS list
   14        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS list ELSE list
   15        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE list
   17        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   18        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS list ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    OPENPARENTHESIS  shift, and go to state 24


State 9

   19 while_expr: WHILE . OPENPARENTHESIS bexpr CLOSEPARENTHESIS list
   20           | WHILE . OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    OPENPARENTHESIS  shift, and go to state 25


State 10

    6 cmd: INTD . list_var SEMICOLON

    VAR  shift, and go to state 14

    atr       go to state 21
    decl      go to state 22
    list_var  go to state 26


State 11

    7 cmd: FLOATD . list_var SEMICOLON

    VAR  shift, and go to state 14

    atr       go to state 21
    decl      go to state 22
    list_var  go to state 27


State 12

   12 scanf: SCAN . OPENPARENTHESIS TYPES COMMA list_scan_var CLOSEPARENTHESIS

    OPENPARENTHESIS  shift, and go to state 28


State 13

   11 printf: PRINT . OPENPARENTHESIS TYPES COMMA list_var CLOSEPARENTHESIS

    OPENPARENTHESIS  shift, and go to state 29


State 14

   21 atr: VAR . EQUAL expr
   22    | VAR . OPENSQUAREBRACKETS INT CLOSESQUAREBRACKETS EQUAL expr
   23 decl: VAR .
   24     | VAR . OPENSQUAREBRACKETS INT CLOSESQUAREBRACKETS

    EQUAL               shift, and go to state 30
    OPENSQUAREBRACKETS  shift, and go to state 31

    $default  reduce using rule 23 (decl)


State 15

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 32


State 16

    2 list: cmd . list
    3     | cmd .

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13
    VAR     shift, and go to state 14

    IF        [reduce using rule 3 (list)]
    WHILE     [reduce using rule 3 (list)]
    INTD      [reduce using rule 3 (list)]
    FLOATD    [reduce using rule 3 (list)]
    SCAN      [reduce using rule 3 (list)]
    PRINT     [reduce using rule 3 (list)]
    VAR       [reduce using rule 3 (list)]
    $default  reduce using rule 3 (list)

    list        go to state 33
    cmd         go to state 16
    printf      go to state 17
    scanf       go to state 18
    if_expr     go to state 19
    while_expr  go to state 20
    atr         go to state 21
    decl        go to state 22
    list_var    go to state 23


State 17

    8 cmd: printf . SEMICOLON

    SEMICOLON  shift, and go to state 34


State 18

    9 cmd: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 35


State 19

    4 cmd: if_expr .

    $default  reduce using rule 4 (cmd)


State 20

    5 cmd: while_expr .

    $default  reduce using rule 5 (cmd)


State 21

   29 list_var: atr .
   30         | atr . COMMA list_var

    COMMA  shift, and go to state 36

    $default  reduce using rule 29 (list_var)


State 22

   27 list_var: decl .
   28         | decl . COMMA list_var

    COMMA  shift, and go to state 37

    $default  reduce using rule 27 (list_var)


State 23

   10 cmd: list_var . SEMICOLON

    SEMICOLON  shift, and go to state 38


State 24

   13 if_expr: IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS list
   14        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS list ELSE list
   15        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE list
   17        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   18        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS list ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    INT              shift, and go to state 39
    FLOAT            shift, and go to state 40
    NOT              shift, and go to state 41
    OPENPARENTHESIS  shift, and go to state 42

    expr   go to state 43
    bexpr  go to state 44


State 25

   19 while_expr: WHILE OPENPARENTHESIS . bexpr CLOSEPARENTHESIS list
   20           | WHILE OPENPARENTHESIS . bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    INT              shift, and go to state 39
    FLOAT            shift, and go to state 40
    NOT              shift, and go to state 41
    OPENPARENTHESIS  shift, and go to state 42

    expr   go to state 43
    bexpr  go to state 45


State 26

    6 cmd: INTD list_var . SEMICOLON

    SEMICOLON  shift, and go to state 46


State 27

    7 cmd: FLOATD list_var . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 28

   12 scanf: SCAN OPENPARENTHESIS . TYPES COMMA list_scan_var CLOSEPARENTHESIS

    TYPES  shift, and go to state 48


State 29

   11 printf: PRINT OPENPARENTHESIS . TYPES COMMA list_var CLOSEPARENTHESIS

    TYPES  shift, and go to state 49


State 30

   21 atr: VAR EQUAL . expr

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 50


State 31

   22 atr: VAR OPENSQUAREBRACKETS . INT CLOSESQUAREBRACKETS EQUAL expr
   24 decl: VAR OPENSQUAREBRACKETS . INT CLOSESQUAREBRACKETS

    INT  shift, and go to state 51


State 32

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS .

    $default  reduce using rule 1 (program)


State 33

    2 list: cmd list .

    $default  reduce using rule 2 (list)


State 34

    8 cmd: printf SEMICOLON .

    $default  reduce using rule 8 (cmd)


State 35

    9 cmd: scanf SEMICOLON .

    $default  reduce using rule 9 (cmd)


State 36

   30 list_var: atr COMMA . list_var

    VAR  shift, and go to state 14

    atr       go to state 21
    decl      go to state 22
    list_var  go to state 52


State 37

   28 list_var: decl COMMA . list_var

    VAR  shift, and go to state 14

    atr       go to state 21
    decl      go to state 22
    list_var  go to state 53


State 38

   10 cmd: list_var SEMICOLON .

    $default  reduce using rule 10 (cmd)


State 39

   31 expr: INT .

    $default  reduce using rule 31 (expr)


State 40

   32 expr: FLOAT .

    $default  reduce using rule 32 (expr)


State 41

   40 bexpr: NOT . bexpr

    INT              shift, and go to state 39
    FLOAT            shift, and go to state 40
    NOT              shift, and go to state 41
    OPENPARENTHESIS  shift, and go to state 42

    expr   go to state 43
    bexpr  go to state 54


State 42

   42 bexpr: OPENPARENTHESIS . expr CLOSEPARENTHESIS

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 55


State 43

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   41 bexpr: expr .
   43      | expr . EQU expr
   44      | expr . DIF expr
   45      | expr . LES expr
   46      | expr . LOQ expr
   47      | expr . GRE expr
   48      | expr . GOQ expr

    PLUS  shift, and go to state 56
    SUB   shift, and go to state 57
    MUL   shift, and go to state 58
    DIV   shift, and go to state 59
    EQU   shift, and go to state 60
    DIF   shift, and go to state 61
    LES   shift, and go to state 62
    LOQ   shift, and go to state 63
    GRE   shift, and go to state 64
    GOQ   shift, and go to state 65
    MOD   shift, and go to state 66

    $default  reduce using rule 41 (bexpr)


State 44

   13 if_expr: IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS list
   14        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS list ELSE list
   15        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE list
   17        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   18        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS list ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   38 bexpr: bexpr . OR bexpr
   39      | bexpr . AND bexpr

    OR                shift, and go to state 67
    AND               shift, and go to state 68
    CLOSEPARENTHESIS  shift, and go to state 69


State 45

   19 while_expr: WHILE OPENPARENTHESIS bexpr . CLOSEPARENTHESIS list
   20           | WHILE OPENPARENTHESIS bexpr . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   38 bexpr: bexpr . OR bexpr
   39      | bexpr . AND bexpr

    OR                shift, and go to state 67
    AND               shift, and go to state 68
    CLOSEPARENTHESIS  shift, and go to state 70


State 46

    6 cmd: INTD list_var SEMICOLON .

    $default  reduce using rule 6 (cmd)


State 47

    7 cmd: FLOATD list_var SEMICOLON .

    $default  reduce using rule 7 (cmd)


State 48

   12 scanf: SCAN OPENPARENTHESIS TYPES . COMMA list_scan_var CLOSEPARENTHESIS

    COMMA  shift, and go to state 71


State 49

   11 printf: PRINT OPENPARENTHESIS TYPES . COMMA list_var CLOSEPARENTHESIS

    COMMA  shift, and go to state 72


State 50

   21 atr: VAR EQUAL expr .
   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr

    PLUS  shift, and go to state 56
    SUB   shift, and go to state 57
    MUL   shift, and go to state 58
    DIV   shift, and go to state 59
    MOD   shift, and go to state 66

    $default  reduce using rule 21 (atr)


State 51

   22 atr: VAR OPENSQUAREBRACKETS INT . CLOSESQUAREBRACKETS EQUAL expr
   24 decl: VAR OPENSQUAREBRACKETS INT . CLOSESQUAREBRACKETS

    CLOSESQUAREBRACKETS  shift, and go to state 73


State 52

   30 list_var: atr COMMA list_var .

    $default  reduce using rule 30 (list_var)


State 53

   28 list_var: decl COMMA list_var .

    $default  reduce using rule 28 (list_var)


State 54

   38 bexpr: bexpr . OR bexpr
   39      | bexpr . AND bexpr
   40      | NOT bexpr .

    OR   shift, and go to state 67
    AND  shift, and go to state 68

    OR        [reduce using rule 40 (bexpr)]
    AND       [reduce using rule 40 (bexpr)]
    $default  reduce using rule 40 (bexpr)


State 55

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   42 bexpr: OPENPARENTHESIS expr . CLOSEPARENTHESIS

    PLUS              shift, and go to state 56
    SUB               shift, and go to state 57
    MUL               shift, and go to state 58
    DIV               shift, and go to state 59
    CLOSEPARENTHESIS  shift, and go to state 74
    MOD               shift, and go to state 66


State 56

   33 expr: expr PLUS . expr

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 75


State 57

   34 expr: expr SUB . expr

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 76


State 58

   35 expr: expr MUL . expr

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 77


State 59

   36 expr: expr DIV . expr

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 78


State 60

   43 bexpr: expr EQU . expr

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 79


State 61

   44 bexpr: expr DIF . expr

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 80


State 62

   45 bexpr: expr LES . expr

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 81


State 63

   46 bexpr: expr LOQ . expr

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 82


State 64

   47 bexpr: expr GRE . expr

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 83


State 65

   48 bexpr: expr GOQ . expr

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 84


State 66

   37 expr: expr MOD . expr

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 85


State 67

   38 bexpr: bexpr OR . bexpr

    INT              shift, and go to state 39
    FLOAT            shift, and go to state 40
    NOT              shift, and go to state 41
    OPENPARENTHESIS  shift, and go to state 42

    expr   go to state 43
    bexpr  go to state 86


State 68

   39 bexpr: bexpr AND . bexpr

    INT              shift, and go to state 39
    FLOAT            shift, and go to state 40
    NOT              shift, and go to state 41
    OPENPARENTHESIS  shift, and go to state 42

    expr   go to state 43
    bexpr  go to state 87


State 69

   13 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . list
   14        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . list ELSE list
   15        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE list
   17        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   18        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . list ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF                 shift, and go to state 8
    WHILE              shift, and go to state 9
    INTD               shift, and go to state 10
    FLOATD             shift, and go to state 11
    SCAN               shift, and go to state 12
    PRINT              shift, and go to state 13
    VAR                shift, and go to state 14
    OPENCURLYBRACKETS  shift, and go to state 88

    list        go to state 89
    cmd         go to state 16
    printf      go to state 17
    scanf       go to state 18
    if_expr     go to state 19
    while_expr  go to state 20
    atr         go to state 21
    decl        go to state 22
    list_var    go to state 23


State 70

   19 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS . list
   20           | WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF                 shift, and go to state 8
    WHILE              shift, and go to state 9
    INTD               shift, and go to state 10
    FLOATD             shift, and go to state 11
    SCAN               shift, and go to state 12
    PRINT              shift, and go to state 13
    VAR                shift, and go to state 14
    OPENCURLYBRACKETS  shift, and go to state 90

    list        go to state 91
    cmd         go to state 16
    printf      go to state 17
    scanf       go to state 18
    if_expr     go to state 19
    while_expr  go to state 20
    atr         go to state 21
    decl        go to state 22
    list_var    go to state 23


State 71

   12 scanf: SCAN OPENPARENTHESIS TYPES COMMA . list_scan_var CLOSEPARENTHESIS

    '&'  shift, and go to state 92

    list_scan_var  go to state 93


State 72

   11 printf: PRINT OPENPARENTHESIS TYPES COMMA . list_var CLOSEPARENTHESIS

    VAR  shift, and go to state 14

    atr       go to state 21
    decl      go to state 22
    list_var  go to state 94


State 73

   22 atr: VAR OPENSQUAREBRACKETS INT CLOSESQUAREBRACKETS . EQUAL expr
   24 decl: VAR OPENSQUAREBRACKETS INT CLOSESQUAREBRACKETS .

    EQUAL  shift, and go to state 95

    $default  reduce using rule 24 (decl)


State 74

   42 bexpr: OPENPARENTHESIS expr CLOSEPARENTHESIS .

    $default  reduce using rule 42 (bexpr)


State 75

   33 expr: expr . PLUS expr
   33     | expr PLUS expr .
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr

    MUL  shift, and go to state 58
    DIV  shift, and go to state 59
    MOD  shift, and go to state 66

    $default  reduce using rule 33 (expr)


State 76

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   34     | expr SUB expr .
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr

    MUL  shift, and go to state 58
    DIV  shift, and go to state 59
    MOD  shift, and go to state 66

    $default  reduce using rule 34 (expr)


State 77

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   35     | expr MUL expr .
   36     | expr . DIV expr
   37     | expr . MOD expr

    $default  reduce using rule 35 (expr)


State 78

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   36     | expr DIV expr .
   37     | expr . MOD expr

    $default  reduce using rule 36 (expr)


State 79

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   43 bexpr: expr EQU expr .

    PLUS  shift, and go to state 56
    SUB   shift, and go to state 57
    MUL   shift, and go to state 58
    DIV   shift, and go to state 59
    MOD   shift, and go to state 66

    $default  reduce using rule 43 (bexpr)


State 80

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   44 bexpr: expr DIF expr .

    PLUS  shift, and go to state 56
    SUB   shift, and go to state 57
    MUL   shift, and go to state 58
    DIV   shift, and go to state 59
    MOD   shift, and go to state 66

    $default  reduce using rule 44 (bexpr)


State 81

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   45 bexpr: expr LES expr .

    PLUS  shift, and go to state 56
    SUB   shift, and go to state 57
    MUL   shift, and go to state 58
    DIV   shift, and go to state 59
    MOD   shift, and go to state 66

    $default  reduce using rule 45 (bexpr)


State 82

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   46 bexpr: expr LOQ expr .

    PLUS  shift, and go to state 56
    SUB   shift, and go to state 57
    MUL   shift, and go to state 58
    DIV   shift, and go to state 59
    MOD   shift, and go to state 66

    $default  reduce using rule 46 (bexpr)


State 83

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   47 bexpr: expr GRE expr .

    PLUS  shift, and go to state 56
    SUB   shift, and go to state 57
    MUL   shift, and go to state 58
    DIV   shift, and go to state 59
    MOD   shift, and go to state 66

    $default  reduce using rule 47 (bexpr)


State 84

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   48 bexpr: expr GOQ expr .

    PLUS  shift, and go to state 56
    SUB   shift, and go to state 57
    MUL   shift, and go to state 58
    DIV   shift, and go to state 59
    MOD   shift, and go to state 66

    $default  reduce using rule 48 (bexpr)


State 85

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   37     | expr MOD expr .

    $default  reduce using rule 37 (expr)


State 86

   38 bexpr: bexpr . OR bexpr
   38      | bexpr OR bexpr .
   39      | bexpr . AND bexpr

    $default  reduce using rule 38 (bexpr)


State 87

   38 bexpr: bexpr . OR bexpr
   39      | bexpr . AND bexpr
   39      | bexpr AND bexpr .

    $default  reduce using rule 39 (bexpr)


State 88

   15 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS ELSE list
   17        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13
    VAR     shift, and go to state 14

    list        go to state 96
    cmd         go to state 16
    printf      go to state 17
    scanf       go to state 18
    if_expr     go to state 19
    while_expr  go to state 20
    atr         go to state 21
    decl        go to state 22
    list_var    go to state 23


State 89

   13 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS list .
   14        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS list . ELSE list
   18        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS list . ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    ELSE  shift, and go to state 97

    ELSE      [reduce using rule 13 (if_expr)]
    $default  reduce using rule 13 (if_expr)


State 90

   20 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13
    VAR     shift, and go to state 14

    list        go to state 98
    cmd         go to state 16
    printf      go to state 17
    scanf       go to state 18
    if_expr     go to state 19
    while_expr  go to state 20
    atr         go to state 21
    decl        go to state 22
    list_var    go to state 23


State 91

   19 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS list .

    $default  reduce using rule 19 (while_expr)


State 92

   25 list_scan_var: '&' . decl COMMA list_scan_var
   26              | '&' . decl

    VAR  shift, and go to state 99

    decl  go to state 100


State 93

   12 scanf: SCAN OPENPARENTHESIS TYPES COMMA list_scan_var . CLOSEPARENTHESIS

    CLOSEPARENTHESIS  shift, and go to state 101


State 94

   11 printf: PRINT OPENPARENTHESIS TYPES COMMA list_var . CLOSEPARENTHESIS

    CLOSEPARENTHESIS  shift, and go to state 102


State 95

   22 atr: VAR OPENSQUAREBRACKETS INT CLOSESQUAREBRACKETS EQUAL . expr

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40

    expr  go to state 103


State 96

   15 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS ELSE list
   17        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 104


State 97

   14 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS list ELSE . list
   18        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS list ELSE . OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF                 shift, and go to state 8
    WHILE              shift, and go to state 9
    INTD               shift, and go to state 10
    FLOATD             shift, and go to state 11
    SCAN               shift, and go to state 12
    PRINT              shift, and go to state 13
    VAR                shift, and go to state 14
    OPENCURLYBRACKETS  shift, and go to state 105

    list        go to state 106
    cmd         go to state 16
    printf      go to state 17
    scanf       go to state 18
    if_expr     go to state 19
    while_expr  go to state 20
    atr         go to state 21
    decl        go to state 22
    list_var    go to state 23


State 98

   20 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 107


State 99

   23 decl: VAR .
   24     | VAR . OPENSQUAREBRACKETS INT CLOSESQUAREBRACKETS

    OPENSQUAREBRACKETS  shift, and go to state 108

    $default  reduce using rule 23 (decl)


State 100

   25 list_scan_var: '&' decl . COMMA list_scan_var
   26              | '&' decl .

    COMMA  shift, and go to state 109

    $default  reduce using rule 26 (list_scan_var)


State 101

   12 scanf: SCAN OPENPARENTHESIS TYPES COMMA list_scan_var CLOSEPARENTHESIS .

    $default  reduce using rule 12 (scanf)


State 102

   11 printf: PRINT OPENPARENTHESIS TYPES COMMA list_var CLOSEPARENTHESIS .

    $default  reduce using rule 11 (printf)


State 103

   22 atr: VAR OPENSQUAREBRACKETS INT CLOSESQUAREBRACKETS EQUAL expr .
   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr

    PLUS  shift, and go to state 56
    SUB   shift, and go to state 57
    MUL   shift, and go to state 58
    DIV   shift, and go to state 59
    MOD   shift, and go to state 66

    $default  reduce using rule 22 (atr)


State 104

   15 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS .
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS . ELSE list
   17        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS . ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    ELSE  shift, and go to state 110

    ELSE      [reduce using rule 15 (if_expr)]
    $default  reduce using rule 15 (if_expr)


State 105

   18 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS list ELSE OPENCURLYBRACKETS . list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13
    VAR     shift, and go to state 14

    list        go to state 111
    cmd         go to state 16
    printf      go to state 17
    scanf       go to state 18
    if_expr     go to state 19
    while_expr  go to state 20
    atr         go to state 21
    decl        go to state 22
    list_var    go to state 23


State 106

   14 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS list ELSE list .

    $default  reduce using rule 14 (if_expr)


State 107

   20 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS .

    $default  reduce using rule 20 (while_expr)


State 108

   24 decl: VAR OPENSQUAREBRACKETS . INT CLOSESQUAREBRACKETS

    INT  shift, and go to state 112


State 109

   25 list_scan_var: '&' decl COMMA . list_scan_var

    '&'  shift, and go to state 92

    list_scan_var  go to state 113


State 110

   16 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE . list
   17        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE . OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF                 shift, and go to state 8
    WHILE              shift, and go to state 9
    INTD               shift, and go to state 10
    FLOATD             shift, and go to state 11
    SCAN               shift, and go to state 12
    PRINT              shift, and go to state 13
    VAR                shift, and go to state 14
    OPENCURLYBRACKETS  shift, and go to state 114

    list        go to state 115
    cmd         go to state 16
    printf      go to state 17
    scanf       go to state 18
    if_expr     go to state 19
    while_expr  go to state 20
    atr         go to state 21
    decl        go to state 22
    list_var    go to state 23


State 111

   18 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS list ELSE OPENCURLYBRACKETS list . CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 116


State 112

   24 decl: VAR OPENSQUAREBRACKETS INT . CLOSESQUAREBRACKETS

    CLOSESQUAREBRACKETS  shift, and go to state 117


State 113

   25 list_scan_var: '&' decl COMMA list_scan_var .

    $default  reduce using rule 25 (list_scan_var)


State 114

   17 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS . list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13
    VAR     shift, and go to state 14

    list        go to state 118
    cmd         go to state 16
    printf      go to state 17
    scanf       go to state 18
    if_expr     go to state 19
    while_expr  go to state 20
    atr         go to state 21
    decl        go to state 22
    list_var    go to state 23


State 115

   16 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE list .

    $default  reduce using rule 16 (if_expr)


State 116

   18 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS list ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS .

    $default  reduce using rule 18 (if_expr)


State 117

   24 decl: VAR OPENSQUAREBRACKETS INT CLOSESQUAREBRACKETS .

    $default  reduce using rule 24 (decl)


State 118

   17 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list . CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 119


State 119

   17 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS .

    $default  reduce using rule 17 (if_expr)
