State 32 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    2 list: cmd list
    3     | cmd

    4 cmd: if_expr
    5    | while_expr
    6    | var_dec
    7    | printf
    8    | scanf

    9 printf: PRINT OPENPARENTHESIS string COMMA list_var CLOSEPARENTHESIS SEMICOLON
   10       | PRINT OPENPARENTHESIS string CLOSEPARENTHESIS SEMICOLON

   11 scanf: SCAN OPENPARENTHESIS string COMMA list_scan_var CLOSEPARENTHESIS SEMICOLON

   12 string: TYPES

   13 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd
   14        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE cmd
   15        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE cmd
   17        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   18        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

   19 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd
   20           | WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

   21 atr: decl EQUAL expr

   22 decl: VAR

   23 list_scan_var: SCANNER_SYM decl COMMA list_scan_var
   24              | SCANNER_SYM decl

   25 var_dec: INTD list_var SEMICOLON
   26        | FLOATD list_var SEMICOLON

   27 list_var: decl
   28         | decl COMMA list_var
   29         | atr COMMA list_var
   30         | atr

   31 expr: num
   32     | OPENPARENTHESIS expr CLOSEPARENTHESIS
   33     | expr PLUS expr
   34     | expr SUB expr
   35     | expr MUL expr
   36     | expr DIV expr
   37     | expr MOD expr

   38 bexpr: INT
   39      | OPENPARENTHESIS bexpr CLOSEPARENTHESIS
   40      | bexpr OR bexpr
   41      | bexpr AND bexpr
   42      | NOT bexpr
   43      | expr EQU expr
   44      | expr DIF expr
   45      | expr LES expr
   46      | expr LOQ expr
   47      | expr GRE expr
   48      | expr GOQ expr

   49 num: INT
   50    | FLOAT


Terminals, with rules where they appear

$end (0) 0
error (256)
MAIN (258) 1
INT <intValue> (259) 38 49
FLOAT <floatValue> (260) 50
PLUS (261) 33
SUB (262) 34
MUL (263) 35
DIV (264) 36
OR (265) 40
AND (266) 41
NOT (267) 42
EQU (268) 43
DIF (269) 44
LES (270) 45
LOQ (271) 46
GRE (272) 47
GOQ (273) 48
IF (274) 13 14 15 16 17 18
ELSE (275) 14 16 17 18
WHILE (276) 19 20
INTD (277) 1 25
FLOATD (278) 26
SCAN (279) 11
PRINT (280) 9 10
VAR <stringValue> (281) 22
SEMICOLON (282) 9 10 11 25 26
EQUAL (283) 21
OPENPARENTHESIS (284) 1 9 10 11 13 14 15 16 17 18 19 20 32 39
CLOSEPARENTHESIS (285) 1 9 10 11 13 14 15 16 17 18 19 20 32 39
OPENCURLYBRACKETS (286) 1 15 16 17 18 20
CLOSECURLYBRACKETS (287) 1 15 16 17 18 20
COMMA (288) 9 11 23 28 29
SCANNER_SYM (289) 23 24
TYPES <typesValue> (290) 12
MOD (291) 37
NO_ELSE (292)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
list <commandList> (40)
    on left: 2 3, on right: 1 2 15 16 17 18 20
cmd <cmdType> (41)
    on left: 4 5 6 7 8, on right: 2 3 13 14 16 18 19
printf <printf_exp> (42)
    on left: 9 10, on right: 7
scanf <scan_expr> (43)
    on left: 11, on right: 8
string <string_types> (44)
    on left: 12, on right: 9 10 11
if_expr <ifExpression> (45)
    on left: 13 14 15 16 17 18, on right: 4
while_expr <whileExpression> (46)
    on left: 19 20, on right: 5
atr <assignment> (47)
    on left: 21, on right: 29 30
decl <declaration> (48)
    on left: 22, on right: 21 23 24 27 28
list_scan_var <scan_list> (49)
    on left: 23 24, on right: 11 23
var_dec <varList> (50)
    on left: 25 26, on right: 6
list_var <list_decl> (51)
    on left: 27 28 29 30, on right: 9 25 26 28 29
expr <exprValue> (52)
    on left: 31 32 33 34 35 36 37, on right: 21 32 33 34 35 36 37 43
    44 45 46 47 48
bexpr <boolExpr> (53)
    on left: 38 39 40 41 42 43 44 45 46 47 48, on right: 13 14 15 16
    17 18 19 20 39 40 41 42
num <number> (54)
    on left: 49 50, on right: 31


State 0

    0 $accept: . program $end

    INTD  shift, and go to state 1

    program  go to state 2


State 1

    1 program: INTD . MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    MAIN  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: INTD MAIN . OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    OPENPARENTHESIS  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: INTD MAIN OPENPARENTHESIS . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    CLOSEPARENTHESIS  shift, and go to state 6


State 6

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    OPENCURLYBRACKETS  shift, and go to state 7


State 7

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13

    list        go to state 14
    cmd         go to state 15
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 8

   13 if_expr: IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd
   14        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE cmd
   15        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE cmd
   17        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   18        | IF . OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    OPENPARENTHESIS  shift, and go to state 21


State 9

   19 while_expr: WHILE . OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd
   20           | WHILE . OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    OPENPARENTHESIS  shift, and go to state 22


State 10

   25 var_dec: INTD . list_var SEMICOLON

    VAR  shift, and go to state 23

    atr       go to state 24
    decl      go to state 25
    list_var  go to state 26


State 11

   26 var_dec: FLOATD . list_var SEMICOLON

    VAR  shift, and go to state 23

    atr       go to state 24
    decl      go to state 25
    list_var  go to state 27


State 12

   11 scanf: SCAN . OPENPARENTHESIS string COMMA list_scan_var CLOSEPARENTHESIS SEMICOLON

    OPENPARENTHESIS  shift, and go to state 28


State 13

    9 printf: PRINT . OPENPARENTHESIS string COMMA list_var CLOSEPARENTHESIS SEMICOLON
   10       | PRINT . OPENPARENTHESIS string CLOSEPARENTHESIS SEMICOLON

    OPENPARENTHESIS  shift, and go to state 29


State 14

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 30


State 15

    2 list: cmd . list
    3     | cmd .

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13

    $default  reduce using rule 3 (list)

    list        go to state 31
    cmd         go to state 15
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 16

    7 cmd: printf .

    $default  reduce using rule 7 (cmd)


State 17

    8 cmd: scanf .

    $default  reduce using rule 8 (cmd)


State 18

    4 cmd: if_expr .

    $default  reduce using rule 4 (cmd)


State 19

    5 cmd: while_expr .

    $default  reduce using rule 5 (cmd)


State 20

    6 cmd: var_dec .

    $default  reduce using rule 6 (cmd)


State 21

   13 if_expr: IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS cmd
   14        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS cmd ELSE cmd
   15        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE cmd
   17        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   18        | IF OPENPARENTHESIS . bexpr CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    INT              shift, and go to state 32
    FLOAT            shift, and go to state 33
    NOT              shift, and go to state 34
    OPENPARENTHESIS  shift, and go to state 35

    expr   go to state 36
    bexpr  go to state 37
    num    go to state 38


State 22

   19 while_expr: WHILE OPENPARENTHESIS . bexpr CLOSEPARENTHESIS cmd
   20           | WHILE OPENPARENTHESIS . bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    INT              shift, and go to state 32
    FLOAT            shift, and go to state 33
    NOT              shift, and go to state 34
    OPENPARENTHESIS  shift, and go to state 35

    expr   go to state 36
    bexpr  go to state 39
    num    go to state 38


State 23

   22 decl: VAR .

    $default  reduce using rule 22 (decl)


State 24

   29 list_var: atr . COMMA list_var
   30         | atr .

    COMMA  shift, and go to state 40

    $default  reduce using rule 30 (list_var)


State 25

   21 atr: decl . EQUAL expr
   27 list_var: decl .
   28         | decl . COMMA list_var

    EQUAL  shift, and go to state 41
    COMMA  shift, and go to state 42

    $default  reduce using rule 27 (list_var)


State 26

   25 var_dec: INTD list_var . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 27

   26 var_dec: FLOATD list_var . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 28

   11 scanf: SCAN OPENPARENTHESIS . string COMMA list_scan_var CLOSEPARENTHESIS SEMICOLON

    TYPES  shift, and go to state 45

    string  go to state 46


State 29

    9 printf: PRINT OPENPARENTHESIS . string COMMA list_var CLOSEPARENTHESIS SEMICOLON
   10       | PRINT OPENPARENTHESIS . string CLOSEPARENTHESIS SEMICOLON

    TYPES  shift, and go to state 45

    string  go to state 47


State 30

    1 program: INTD MAIN OPENPARENTHESIS CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS .

    $default  reduce using rule 1 (program)


State 31

    2 list: cmd list .

    $default  reduce using rule 2 (list)


State 32

   38 bexpr: INT .
   49 num: INT .

    OR                reduce using rule 38 (bexpr)
    AND               reduce using rule 38 (bexpr)
    CLOSEPARENTHESIS  reduce using rule 38 (bexpr)
    CLOSEPARENTHESIS  [reduce using rule 49 (num)]
    $default          reduce using rule 49 (num)


State 33

   50 num: FLOAT .

    $default  reduce using rule 50 (num)


State 34

   42 bexpr: NOT . bexpr

    INT              shift, and go to state 32
    FLOAT            shift, and go to state 33
    NOT              shift, and go to state 34
    OPENPARENTHESIS  shift, and go to state 35

    expr   go to state 36
    bexpr  go to state 48
    num    go to state 38


State 35

   32 expr: OPENPARENTHESIS . expr CLOSEPARENTHESIS
   39 bexpr: OPENPARENTHESIS . bexpr CLOSEPARENTHESIS

    INT              shift, and go to state 32
    FLOAT            shift, and go to state 33
    NOT              shift, and go to state 34
    OPENPARENTHESIS  shift, and go to state 35

    expr   go to state 49
    bexpr  go to state 50
    num    go to state 38


State 36

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   43 bexpr: expr . EQU expr
   44      | expr . DIF expr
   45      | expr . LES expr
   46      | expr . LOQ expr
   47      | expr . GRE expr
   48      | expr . GOQ expr

    PLUS  shift, and go to state 51
    SUB   shift, and go to state 52
    MUL   shift, and go to state 53
    DIV   shift, and go to state 54
    EQU   shift, and go to state 55
    DIF   shift, and go to state 56
    LES   shift, and go to state 57
    LOQ   shift, and go to state 58
    GRE   shift, and go to state 59
    GOQ   shift, and go to state 60
    MOD   shift, and go to state 61


State 37

   13 if_expr: IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS cmd
   14        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS cmd ELSE cmd
   15        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE cmd
   17        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   18        | IF OPENPARENTHESIS bexpr . CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   40 bexpr: bexpr . OR bexpr
   41      | bexpr . AND bexpr

    OR                shift, and go to state 62
    AND               shift, and go to state 63
    CLOSEPARENTHESIS  shift, and go to state 64


State 38

   31 expr: num .

    $default  reduce using rule 31 (expr)


State 39

   19 while_expr: WHILE OPENPARENTHESIS bexpr . CLOSEPARENTHESIS cmd
   20           | WHILE OPENPARENTHESIS bexpr . CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   40 bexpr: bexpr . OR bexpr
   41      | bexpr . AND bexpr

    OR                shift, and go to state 62
    AND               shift, and go to state 63
    CLOSEPARENTHESIS  shift, and go to state 65


State 40

   29 list_var: atr COMMA . list_var

    VAR  shift, and go to state 23

    atr       go to state 24
    decl      go to state 25
    list_var  go to state 66


State 41

   21 atr: decl EQUAL . expr

    INT              shift, and go to state 67
    FLOAT            shift, and go to state 33
    OPENPARENTHESIS  shift, and go to state 68

    expr  go to state 69
    num   go to state 38


State 42

   28 list_var: decl COMMA . list_var

    VAR  shift, and go to state 23

    atr       go to state 24
    decl      go to state 25
    list_var  go to state 70


State 43

   25 var_dec: INTD list_var SEMICOLON .

    $default  reduce using rule 25 (var_dec)


State 44

   26 var_dec: FLOATD list_var SEMICOLON .

    $default  reduce using rule 26 (var_dec)


State 45

   12 string: TYPES .

    $default  reduce using rule 12 (string)


State 46

   11 scanf: SCAN OPENPARENTHESIS string . COMMA list_scan_var CLOSEPARENTHESIS SEMICOLON

    COMMA  shift, and go to state 71


State 47

    9 printf: PRINT OPENPARENTHESIS string . COMMA list_var CLOSEPARENTHESIS SEMICOLON
   10       | PRINT OPENPARENTHESIS string . CLOSEPARENTHESIS SEMICOLON

    CLOSEPARENTHESIS  shift, and go to state 72
    COMMA             shift, and go to state 73


State 48

   40 bexpr: bexpr . OR bexpr
   41      | bexpr . AND bexpr
   42      | NOT bexpr .

    $default  reduce using rule 42 (bexpr)


State 49

   32 expr: OPENPARENTHESIS expr . CLOSEPARENTHESIS
   33     | expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   43 bexpr: expr . EQU expr
   44      | expr . DIF expr
   45      | expr . LES expr
   46      | expr . LOQ expr
   47      | expr . GRE expr
   48      | expr . GOQ expr

    PLUS              shift, and go to state 51
    SUB               shift, and go to state 52
    MUL               shift, and go to state 53
    DIV               shift, and go to state 54
    EQU               shift, and go to state 55
    DIF               shift, and go to state 56
    LES               shift, and go to state 57
    LOQ               shift, and go to state 58
    GRE               shift, and go to state 59
    GOQ               shift, and go to state 60
    CLOSEPARENTHESIS  shift, and go to state 74
    MOD               shift, and go to state 61


State 50

   39 bexpr: OPENPARENTHESIS bexpr . CLOSEPARENTHESIS
   40      | bexpr . OR bexpr
   41      | bexpr . AND bexpr

    OR                shift, and go to state 62
    AND               shift, and go to state 63
    CLOSEPARENTHESIS  shift, and go to state 75


State 51

   33 expr: expr PLUS . expr

    INT              shift, and go to state 67
    FLOAT            shift, and go to state 33
    OPENPARENTHESIS  shift, and go to state 68

    expr  go to state 76
    num   go to state 38


State 52

   34 expr: expr SUB . expr

    INT              shift, and go to state 67
    FLOAT            shift, and go to state 33
    OPENPARENTHESIS  shift, and go to state 68

    expr  go to state 77
    num   go to state 38


State 53

   35 expr: expr MUL . expr

    INT              shift, and go to state 67
    FLOAT            shift, and go to state 33
    OPENPARENTHESIS  shift, and go to state 68

    expr  go to state 78
    num   go to state 38


State 54

   36 expr: expr DIV . expr

    INT              shift, and go to state 67
    FLOAT            shift, and go to state 33
    OPENPARENTHESIS  shift, and go to state 68

    expr  go to state 79
    num   go to state 38


State 55

   43 bexpr: expr EQU . expr

    INT              shift, and go to state 67
    FLOAT            shift, and go to state 33
    OPENPARENTHESIS  shift, and go to state 68

    expr  go to state 80
    num   go to state 38


State 56

   44 bexpr: expr DIF . expr

    INT              shift, and go to state 67
    FLOAT            shift, and go to state 33
    OPENPARENTHESIS  shift, and go to state 68

    expr  go to state 81
    num   go to state 38


State 57

   45 bexpr: expr LES . expr

    INT              shift, and go to state 67
    FLOAT            shift, and go to state 33
    OPENPARENTHESIS  shift, and go to state 68

    expr  go to state 82
    num   go to state 38


State 58

   46 bexpr: expr LOQ . expr

    INT              shift, and go to state 67
    FLOAT            shift, and go to state 33
    OPENPARENTHESIS  shift, and go to state 68

    expr  go to state 83
    num   go to state 38


State 59

   47 bexpr: expr GRE . expr

    INT              shift, and go to state 67
    FLOAT            shift, and go to state 33
    OPENPARENTHESIS  shift, and go to state 68

    expr  go to state 84
    num   go to state 38


State 60

   48 bexpr: expr GOQ . expr

    INT              shift, and go to state 67
    FLOAT            shift, and go to state 33
    OPENPARENTHESIS  shift, and go to state 68

    expr  go to state 85
    num   go to state 38


State 61

   37 expr: expr MOD . expr

    INT              shift, and go to state 67
    FLOAT            shift, and go to state 33
    OPENPARENTHESIS  shift, and go to state 68

    expr  go to state 86
    num   go to state 38


State 62

   40 bexpr: bexpr OR . bexpr

    INT              shift, and go to state 32
    FLOAT            shift, and go to state 33
    NOT              shift, and go to state 34
    OPENPARENTHESIS  shift, and go to state 35

    expr   go to state 36
    bexpr  go to state 87
    num    go to state 38


State 63

   41 bexpr: bexpr AND . bexpr

    INT              shift, and go to state 32
    FLOAT            shift, and go to state 33
    NOT              shift, and go to state 34
    OPENPARENTHESIS  shift, and go to state 35

    expr   go to state 36
    bexpr  go to state 88
    num    go to state 38


State 64

   13 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . cmd
   14        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . cmd ELSE cmd
   15        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE cmd
   17        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS
   18        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS . cmd ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF                 shift, and go to state 8
    WHILE              shift, and go to state 9
    INTD               shift, and go to state 10
    FLOATD             shift, and go to state 11
    SCAN               shift, and go to state 12
    PRINT              shift, and go to state 13
    OPENCURLYBRACKETS  shift, and go to state 89

    cmd         go to state 90
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 65

   19 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS . cmd
   20           | WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS . OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF                 shift, and go to state 8
    WHILE              shift, and go to state 9
    INTD               shift, and go to state 10
    FLOATD             shift, and go to state 11
    SCAN               shift, and go to state 12
    PRINT              shift, and go to state 13
    OPENCURLYBRACKETS  shift, and go to state 91

    cmd         go to state 92
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 66

   29 list_var: atr COMMA list_var .

    $default  reduce using rule 29 (list_var)


State 67

   49 num: INT .

    $default  reduce using rule 49 (num)


State 68

   32 expr: OPENPARENTHESIS . expr CLOSEPARENTHESIS

    INT              shift, and go to state 67
    FLOAT            shift, and go to state 33
    OPENPARENTHESIS  shift, and go to state 68

    expr  go to state 93
    num   go to state 38


State 69

   21 atr: decl EQUAL expr .
   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr

    PLUS  shift, and go to state 51
    SUB   shift, and go to state 52
    MUL   shift, and go to state 53
    DIV   shift, and go to state 54
    MOD   shift, and go to state 61

    $default  reduce using rule 21 (atr)


State 70

   28 list_var: decl COMMA list_var .

    $default  reduce using rule 28 (list_var)


State 71

   11 scanf: SCAN OPENPARENTHESIS string COMMA . list_scan_var CLOSEPARENTHESIS SEMICOLON

    SCANNER_SYM  shift, and go to state 94

    list_scan_var  go to state 95


State 72

   10 printf: PRINT OPENPARENTHESIS string CLOSEPARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 96


State 73

    9 printf: PRINT OPENPARENTHESIS string COMMA . list_var CLOSEPARENTHESIS SEMICOLON

    VAR  shift, and go to state 23

    atr       go to state 24
    decl      go to state 25
    list_var  go to state 97


State 74

   32 expr: OPENPARENTHESIS expr CLOSEPARENTHESIS .

    $default  reduce using rule 32 (expr)


State 75

   39 bexpr: OPENPARENTHESIS bexpr CLOSEPARENTHESIS .

    $default  reduce using rule 39 (bexpr)


State 76

   33 expr: expr . PLUS expr
   33     | expr PLUS expr .
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54
    MOD  shift, and go to state 61

    $default  reduce using rule 33 (expr)


State 77

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   34     | expr SUB expr .
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54
    MOD  shift, and go to state 61

    $default  reduce using rule 34 (expr)


State 78

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   35     | expr MUL expr .
   36     | expr . DIV expr
   37     | expr . MOD expr

    $default  reduce using rule 35 (expr)


State 79

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   36     | expr DIV expr .
   37     | expr . MOD expr

    $default  reduce using rule 36 (expr)


State 80

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   43 bexpr: expr EQU expr .

    PLUS  shift, and go to state 51
    SUB   shift, and go to state 52
    MUL   shift, and go to state 53
    DIV   shift, and go to state 54
    MOD   shift, and go to state 61

    $default  reduce using rule 43 (bexpr)


State 81

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   44 bexpr: expr DIF expr .

    PLUS  shift, and go to state 51
    SUB   shift, and go to state 52
    MUL   shift, and go to state 53
    DIV   shift, and go to state 54
    MOD   shift, and go to state 61

    $default  reduce using rule 44 (bexpr)


State 82

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   45 bexpr: expr LES expr .

    PLUS  shift, and go to state 51
    SUB   shift, and go to state 52
    MUL   shift, and go to state 53
    DIV   shift, and go to state 54
    MOD   shift, and go to state 61

    $default  reduce using rule 45 (bexpr)


State 83

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   46 bexpr: expr LOQ expr .

    PLUS  shift, and go to state 51
    SUB   shift, and go to state 52
    MUL   shift, and go to state 53
    DIV   shift, and go to state 54
    MOD   shift, and go to state 61

    $default  reduce using rule 46 (bexpr)


State 84

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   47 bexpr: expr GRE expr .

    PLUS  shift, and go to state 51
    SUB   shift, and go to state 52
    MUL   shift, and go to state 53
    DIV   shift, and go to state 54
    MOD   shift, and go to state 61

    $default  reduce using rule 47 (bexpr)


State 85

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   48 bexpr: expr GOQ expr .

    PLUS  shift, and go to state 51
    SUB   shift, and go to state 52
    MUL   shift, and go to state 53
    DIV   shift, and go to state 54
    MOD   shift, and go to state 61

    $default  reduce using rule 48 (bexpr)


State 86

   33 expr: expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr
   37     | expr MOD expr .

    $default  reduce using rule 37 (expr)


State 87

   40 bexpr: bexpr . OR bexpr
   40      | bexpr OR bexpr .
   41      | bexpr . AND bexpr

    $default  reduce using rule 40 (bexpr)


State 88

   40 bexpr: bexpr . OR bexpr
   41      | bexpr . AND bexpr
   41      | bexpr AND bexpr .

    $default  reduce using rule 41 (bexpr)


State 89

   15 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS ELSE cmd
   17        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13

    list        go to state 98
    cmd         go to state 15
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 90

   13 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd .
   14        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd . ELSE cmd
   18        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd . ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    ELSE  shift, and go to state 99

    $default  reduce using rule 13 (if_expr)


State 91

   20 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS . list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13

    list        go to state 100
    cmd         go to state 15
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 92

   19 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd .

    $default  reduce using rule 19 (while_expr)


State 93

   32 expr: OPENPARENTHESIS expr . CLOSEPARENTHESIS
   33     | expr . PLUS expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | expr . MOD expr

    PLUS              shift, and go to state 51
    SUB               shift, and go to state 52
    MUL               shift, and go to state 53
    DIV               shift, and go to state 54
    CLOSEPARENTHESIS  shift, and go to state 74
    MOD               shift, and go to state 61


State 94

   23 list_scan_var: SCANNER_SYM . decl COMMA list_scan_var
   24              | SCANNER_SYM . decl

    VAR  shift, and go to state 23

    decl  go to state 101


State 95

   11 scanf: SCAN OPENPARENTHESIS string COMMA list_scan_var . CLOSEPARENTHESIS SEMICOLON

    CLOSEPARENTHESIS  shift, and go to state 102


State 96

   10 printf: PRINT OPENPARENTHESIS string CLOSEPARENTHESIS SEMICOLON .

    $default  reduce using rule 10 (printf)


State 97

    9 printf: PRINT OPENPARENTHESIS string COMMA list_var . CLOSEPARENTHESIS SEMICOLON

    CLOSEPARENTHESIS  shift, and go to state 103


State 98

   15 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS ELSE cmd
   17        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 104


State 99

   14 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE . cmd
   18        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE . OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF                 shift, and go to state 8
    WHILE              shift, and go to state 9
    INTD               shift, and go to state 10
    FLOATD             shift, and go to state 11
    SCAN               shift, and go to state 12
    PRINT              shift, and go to state 13
    OPENCURLYBRACKETS  shift, and go to state 105

    cmd         go to state 106
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 100

   20 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list . CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 107


State 101

   23 list_scan_var: SCANNER_SYM decl . COMMA list_scan_var
   24              | SCANNER_SYM decl .

    COMMA  shift, and go to state 108

    $default  reduce using rule 24 (list_scan_var)


State 102

   11 scanf: SCAN OPENPARENTHESIS string COMMA list_scan_var CLOSEPARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 109


State 103

    9 printf: PRINT OPENPARENTHESIS string COMMA list_var CLOSEPARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 104

   15 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS .
   16        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS . ELSE cmd
   17        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS . ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    ELSE  shift, and go to state 111

    $default  reduce using rule 15 (if_expr)


State 105

   18 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS . list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13

    list        go to state 112
    cmd         go to state 15
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 106

   14 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE cmd .

    $default  reduce using rule 14 (if_expr)


State 107

   20 while_expr: WHILE OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS .

    $default  reduce using rule 20 (while_expr)


State 108

   23 list_scan_var: SCANNER_SYM decl COMMA . list_scan_var

    SCANNER_SYM  shift, and go to state 94

    list_scan_var  go to state 113


State 109

   11 scanf: SCAN OPENPARENTHESIS string COMMA list_scan_var CLOSEPARENTHESIS SEMICOLON .

    $default  reduce using rule 11 (scanf)


State 110

    9 printf: PRINT OPENPARENTHESIS string COMMA list_var CLOSEPARENTHESIS SEMICOLON .

    $default  reduce using rule 9 (printf)


State 111

   16 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE . cmd
   17        | IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE . OPENCURLYBRACKETS list CLOSECURLYBRACKETS

    IF                 shift, and go to state 8
    WHILE              shift, and go to state 9
    INTD               shift, and go to state 10
    FLOATD             shift, and go to state 11
    SCAN               shift, and go to state 12
    PRINT              shift, and go to state 13
    OPENCURLYBRACKETS  shift, and go to state 114

    cmd         go to state 115
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 112

   18 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS list . CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 116


State 113

   23 list_scan_var: SCANNER_SYM decl COMMA list_scan_var .

    $default  reduce using rule 23 (list_scan_var)


State 114

   17 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS . list CLOSECURLYBRACKETS

    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    INTD    shift, and go to state 10
    FLOATD  shift, and go to state 11
    SCAN    shift, and go to state 12
    PRINT   shift, and go to state 13

    list        go to state 117
    cmd         go to state 15
    printf      go to state 16
    scanf       go to state 17
    if_expr     go to state 18
    while_expr  go to state 19
    var_dec     go to state 20


State 115

   16 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE cmd .

    $default  reduce using rule 16 (if_expr)


State 116

   18 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS cmd ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS .

    $default  reduce using rule 18 (if_expr)


State 117

   17 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list . CLOSECURLYBRACKETS

    CLOSECURLYBRACKETS  shift, and go to state 118


State 118

   17 if_expr: IF OPENPARENTHESIS bexpr CLOSEPARENTHESIS OPENCURLYBRACKETS list CLOSECURLYBRACKETS ELSE OPENCURLYBRACKETS list CLOSECURLYBRACKETS .

    $default  reduce using rule 17 (if_expr)
